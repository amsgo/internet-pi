---
- name: Create Pi-hole folder on Pi.
  ansible.builtin.file:
    path: "{{ config_dir }}/pi-hole"
    state: directory
    mode: 0755
  become: false
  register: pi_hole_dir

- name: Copy Pi-hole docker-compose template to Pi.
  ansible.builtin.template:
    src: templates/pi-hole-docker-compose.yml.j2
    dest: "{{ pi_hole_dir.path }}/docker-compose.yml"
    mode: '0640'
  become: false
  notify: Restart pi-hole

# TODO: The first time this playbook is run, the `pi` user may not be added
# to the `docker` group, so this task may fail.
- name: Ensure Pi-hole is running.
  community.docker.docker_compose_v2:
    project_src: "{{ pi_hole_dir.path }}/"
    build: never
  become: false

- name: Ensure resolveconf exists.
  ansible.builtin.file:
    path: "/etc/resolvconf.conf"
    state: touch
    mode: "744"

- name: Update resolveconf for local name server use.
  ansible.builtin.lineinfile:
    line: "name_servers=127.0.0.1"
    dest: "/etc/resolvconf.conf"
    regexp: "^#?name_servers="
  register: resolvconf_file

- name: Regenerate resolvconf if file is changed.
  ansible.builtin.command: resolvconf -u
  changed_when: false
  when: resolvconf_file is changed

- name: Ensure Pi-hole configuration directory exists
  ansible.builtin.file:
    path: "/etc/pihole"
    state: directory
    mode: "0755"
  become: true

- name: Ensure FTL-conf exists.
  ansible.builtin.file:
    path: "/etc/pihole/pihole-FTL.conf"
    state: touch
    mode: "744"
  become: true

- name: Update FTL-conf to allow Apple Private Relay.
  ansible.builtin.lineinfile:
    line: "BLOCK_ICLOUD_PR=false"
    dest: "/etc/pihole/pihole-FTL.conf"
    regexp: "^#?BLOCK_ICLOUD_PR="
  register: ftl_conf_file

- name: Restart DNS if FTL-conf is changed.
  community.docker.docker_container_exec:
    container: pihole
    command: pihole restartdns
  changed_when: false
  when: ftl_conf_file is changed
